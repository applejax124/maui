<Project>
 <PropertyGroup>
    <NightlyTag>nightly</NightlyTag>
    <RegexTag>[a-z]+\.[0-9]</RegexTag>
 </PropertyGroup>
 <PropertyGroup>
    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_TARGETBRANCH)' != ''">$(SYSTEM_PULLREQUEST_TARGETBRANCH)</GitBranch>
    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_TARGETBRANCH)' == '' and '$(BUILD_SOURCEBRANCHNAME)' != ''">$(BUILD_SOURCEBRANCHNAME)</GitBranch>
  </PropertyGroup>

  <PropertyGroup>
    <CoreCompileDependsOn>
      SetVersions;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
    <GenerateNuspecDependsOn>
      SetVersions;
      $(GenerateNuspecDependsOn);
    </GenerateNuspecDependsOn>
    <GetPackageVersionDependsOn>
      SetVersions;
      $(GetPackageVersionDependsOn);
    </GetPackageVersionDependsOn>
    <SetVersionsBefore>
      GetAssemblyVersion;
      $(SetVersionsBefore);
    </SetVersionsBefore>
    <SetVersionsDependsOn>
      $(SetVersionsDependsOn);
    </SetVersionsDependsOn>
  </PropertyGroup>

  <Target Name="SetVersions" BeforeTargets="$(SetVersionsBefore)" DependsOnTargets="$(SetVersionsDependsOn)" Returns="$(Version)">
    <PropertyGroup>
      <SemVerLabel>$([System.Text.RegularExpressions.Regex]::Match($(GitTag), $(RegexTag)))</SemVerLabel>
      <GitSemVerLabel Condition=" '$(GitTag)' != '' and $([System.Text.RegularExpressions.Regex]::IsMatch('$(GitTag)', $(RegexTag))) ">$(SemVerLabel)</GitSemVerLabel> 
      <GitSemVerLabel  Condition="$(CI) and '$(BUILD_REASON)' == 'Schedule'">$(NightlyTag)</GitSemVerLabel>
      <GitSemVerDashLabel Condition="'$(PreReleaseVersionLabel)' != ''" >-$(PreReleaseVersionLabel)</GitSemVerDashLabel>
    </PropertyGroup>
    <ItemGroup>
     
      <VersionMetadata Condition="$(CI) and '$(BUILD_REASON)' == 'PullRequest'"
                       Include="pr.$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)"/>

      <VersionMetadata Condition="'$(SourceLinkId)' != ''"  Include="sha.$(SourceLinkId)"/>

      <VersionMetadata Condition="$(CI)"
                       Include="azdo.$(BUILD_BUILDID)"/>
    </ItemGroup>

    <PropertyGroup>
      <VersionMetadataLabel>@(VersionMetadata -> '%(Identity)', '-')</VersionMetadataLabel>
      <VersionMetadataPlusLabel Condition="'$(VersionMetadataLabel)' != ''">+$(VersionMetadataLabel)</VersionMetadataPlusLabel>
      <Version>$(MajorVersion).$(MinorVersion).$(PatchVersion)</Version>
      <PackageReferenceVersion>$(MajorVersion).$(MinorVersion).$(PatchVersion)$(GitSemVerDashLabel)</PackageReferenceVersion>
      <PackageReferenceVersion Condition="$(CI) and '$(GitSemVerDashLabel)' != ''">$(MajorVersion).$(MinorVersion).$(PatchVersion)$(GitSemVerDashLabel).$(BUILDVERSION)</PackageReferenceVersion>
      <PackageReferenceVersion Condition="$(CI) and '$(GitSemVerDashLabel)' == ''">$(MajorVersion).$(MinorVersion).$(PatchVersion)</PackageReferenceVersion>
      <VSComponentVersion>$(MajorVersion).$(MinorVersion).$(GitBaseVersionPatch)</VSComponentVersion>
      <VSComponentVersion Condition="$(CI) and '$(GitSemVerDashLabel)' != ''">$(MajorVersion).$(MinorVersion).$(PatchVersion).$(BUILDVERSION)</VSComponentVersion>
      <VSComponentVersion Condition="$(CI) and '$(GitSemVerDashLabel)' == ''">$(MajorVersion).$(MinorVersion).$(PatchVersion).0</VSComponentVersion>
      <PackageVersion>$(PackageReferenceVersion)$(VersionMetadataPlusLabel)</PackageVersion>
    </PropertyGroup>

    <PropertyGroup>
      <InformationalVersion>$(PackageVersion)</InformationalVersion>
      <FileVersion>$(Version).0</FileVersion>
    </PropertyGroup>

    <Message Condition="$(CI) and '$(BUILD_REASON)' == 'Schedule'" Importance="high" Text="##vso[build.addbuildtag]$(NightlyTag)"/>
    <Message Condition="$(CI) and '$(BUILD_BUILDNUMBER)' != '$(PackageVersion)'" Importance="high" Text="##vso[build.updatebuildnumber]$(PackageVersion)"/>
  </Target>

</Project>